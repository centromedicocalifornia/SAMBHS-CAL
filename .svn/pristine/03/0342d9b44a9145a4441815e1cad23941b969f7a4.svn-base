using SAMBHS.Common.DataModel;
using System.Linq;
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.3.0.0 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/09/21 - 11:37:32
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System.Text;
using System.Runtime.Serialization;
using System.Collections.Generic;
using System;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="configuracionfacturacion"/> and <see cref="configuracionfacturacionDto"/>.
    /// </summary>
    public static partial class configuracionfacturacionAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="configuracionfacturacionDto"/> converted from <see cref="configuracionfacturacion"/>.</param>
        static partial void OnDTO(this configuracionfacturacion entity, configuracionfacturacionDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="configuracionfacturacion"/> converted from <see cref="configuracionfacturacionDto"/>.</param>
        static partial void OnEntity(this configuracionfacturacionDto dto, configuracionfacturacion entity);

        /// <summary>
        /// Converts this instance of <see cref="configuracionfacturacionDto"/> to an instance of <see cref="configuracionfacturacion"/>.
        /// </summary>
        /// <param name="dto"><see cref="configuracionfacturacionDto"/> to convert.</param>
        public static configuracionfacturacion ToEntity(this configuracionfacturacionDto dto)
        {
            if (dto == null) return null;

            var entity = new configuracionfacturacion();

            entity.i_Idconfiguracionfacturacion = dto.i_Idconfiguracionfacturacion;
            entity.v_Ruc = dto.v_Ruc;
            entity.v_Usuario = dto.v_Usuario;
            entity.v_Clave = dto.v_Clave;
            entity.v_RazonSocial = dto.v_RazonSocial;
            entity.v_NombreComercial = dto.v_NombreComercial;
            entity.v_Domicilio = dto.v_Domicilio;
            entity.v_Urbanizacion = dto.v_Urbanizacion;
            entity.v_Ubigueo = dto.v_Ubigueo;
            entity.v_Departamento = dto.v_Departamento;
            entity.v_Provincia = dto.v_Provincia;
            entity.v_Distrito = dto.v_Distrito;
            entity.b_FileCertificado = dto.b_FileCertificado;
            entity.v_ClaveCertificado = dto.v_ClaveCertificado;
            entity.i_EsEmisor = dto.i_EsEmisor;
            entity.i_GroupUndInter = dto.i_GroupUndInter;
            entity.i_GroupNCR = dto.i_GroupNCR;
            entity.i_GroupNDB = dto.i_GroupNDB;
            entity.i_TipoServicio = dto.i_TipoServicio;
            entity.b_Logo = dto.b_Logo;
            entity.v_Web = dto.v_Web;
            entity.v_Resolucion = dto.v_Resolucion;
            entity.i_Automatic = dto.i_Automatic;
            entity.SmtpHost = dto.SmtpHost;
            entity.SmtpPort = dto.SmtpPort;
            entity.SmtpEmail = dto.SmtpEmail;
            entity.SmtpPassword = dto.SmtpPassword;
            entity.SmtpSsl = dto.SmtpSsl;
            entity.v_FeEndpoint = dto.v_FeEndpoint;
            entity.v_FePassword = dto.v_FePassword;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="configuracionfacturacion"/> to an instance of <see cref="configuracionfacturacionDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="configuracionfacturacion"/> to convert.</param>
        public static configuracionfacturacionDto ToDTO(this configuracionfacturacion entity)
        {
            if (entity == null) return null;

            var dto = new configuracionfacturacionDto();

            dto.i_Idconfiguracionfacturacion = entity.i_Idconfiguracionfacturacion;
            dto.v_Ruc = entity.v_Ruc;
            dto.v_Usuario = entity.v_Usuario;
            dto.v_Clave = entity.v_Clave;
            dto.v_RazonSocial = entity.v_RazonSocial;
            dto.v_NombreComercial = entity.v_NombreComercial;
            dto.v_Domicilio = entity.v_Domicilio;
            dto.v_Urbanizacion = entity.v_Urbanizacion;
            dto.v_Ubigueo = entity.v_Ubigueo;
            dto.v_Departamento = entity.v_Departamento;
            dto.v_Provincia = entity.v_Provincia;
            dto.v_Distrito = entity.v_Distrito;
            dto.b_FileCertificado = entity.b_FileCertificado;
            dto.v_ClaveCertificado = entity.v_ClaveCertificado;
            dto.i_EsEmisor = entity.i_EsEmisor;
            dto.i_GroupUndInter = entity.i_GroupUndInter;
            dto.i_GroupNCR = entity.i_GroupNCR;
            dto.i_GroupNDB = entity.i_GroupNDB;
            dto.i_TipoServicio = entity.i_TipoServicio;
            dto.b_Logo = entity.b_Logo;
            dto.v_Web = entity.v_Web;
            dto.v_Resolucion = entity.v_Resolucion;
            dto.i_Automatic = entity.i_Automatic;
            dto.SmtpHost = entity.SmtpHost;
            dto.SmtpPort = entity.SmtpPort;
            dto.SmtpEmail = entity.SmtpEmail;
            dto.SmtpPassword = entity.SmtpPassword;
            dto.SmtpSsl = entity.SmtpSsl;
            dto.v_FeEndpoint = entity.v_FeEndpoint;
            dto.v_FePassword = entity.v_FePassword;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="configuracionfacturacionDto"/> to an instance of <see cref="configuracionfacturacion"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<configuracionfacturacion> ToEntities(this IEnumerable<configuracionfacturacionDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="configuracionfacturacion"/> to an instance of <see cref="configuracionfacturacionDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<configuracionfacturacionDto> ToDTOs(this IEnumerable<configuracionfacturacion> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}