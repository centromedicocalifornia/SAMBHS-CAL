//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/07/13 - 15:14:18
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="productoinventario"/> and <see cref="productoinventarioDto"/>.
    /// </summary>
    public static partial class productoinventarioAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="productoinventarioDto"/> converted from <see cref="productoinventario"/>.</param>
        static partial void OnDTO(this productoinventario entity, productoinventarioDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="productoinventario"/> converted from <see cref="productoinventarioDto"/>.</param>
        static partial void OnEntity(this productoinventarioDto dto, productoinventario entity);

        /// <summary>
        /// Converts this instance of <see cref="productoinventarioDto"/> to an instance of <see cref="productoinventario"/>.
        /// </summary>
        /// <param name="dto"><see cref="productoinventarioDto"/> to convert.</param>
        public static productoinventario ToEntity(this productoinventarioDto dto)
        {
            if (dto == null) return null;

            var entity = new productoinventario();

            entity.i_IdProductoInventario = dto.i_IdProductoInventario;
            entity.i_IdEstablecimiento = dto.i_IdEstablecimiento;
            entity.i_IdAlmacen = dto.i_IdAlmacen;
            entity.v_IdProducto = dto.v_IdProducto;
            entity.d_Cantidad = dto.d_Cantidad;
            entity.t_Fecha = dto.t_Fecha;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="productoinventario"/> to an instance of <see cref="productoinventarioDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="productoinventario"/> to convert.</param>
        public static productoinventarioDto ToDTO(this productoinventario entity)
        {
            if (entity == null) return null;

            var dto = new productoinventarioDto();

            dto.i_IdProductoInventario = entity.i_IdProductoInventario;
            dto.i_IdEstablecimiento = entity.i_IdEstablecimiento;
            dto.i_IdAlmacen = entity.i_IdAlmacen;
            dto.v_IdProducto = entity.v_IdProducto;
            dto.d_Cantidad = entity.d_Cantidad;
            dto.t_Fecha = entity.t_Fecha;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="productoinventarioDto"/> to an instance of <see cref="productoinventario"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<productoinventario> ToEntities(this IEnumerable<productoinventarioDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="productoinventario"/> to an instance of <see cref="productoinventarioDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<productoinventarioDto> ToDTOs(this IEnumerable<productoinventario> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
