//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/07/18 - 13:13:53
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="licenses"/> and <see cref="licensesDto"/>.
    /// </summary>
    public static partial class licensesAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="licensesDto"/> converted from <see cref="licenses"/>.</param>
        static partial void OnDTO(this licenses entity, licensesDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="licenses"/> converted from <see cref="licensesDto"/>.</param>
        static partial void OnEntity(this licensesDto dto, licenses entity);

        /// <summary>
        /// Converts this instance of <see cref="licensesDto"/> to an instance of <see cref="licenses"/>.
        /// </summary>
        /// <param name="dto"><see cref="licensesDto"/> to convert.</param>
        public static licenses ToEntity(this licensesDto dto)
        {
            if (dto == null) return null;

            var entity = new licenses();

            entity.UID = dto.UID;
            entity.v_License = dto.v_License;
            entity.v_Descripcion = dto.v_Descripcion;
            entity.t_FechaCreacion = dto.t_FechaCreacion;
            entity.i_IdUsuarioCreacion = dto.i_IdUsuarioCreacion;
            entity.t_FechaExpiracion = dto.t_FechaExpiracion;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="licenses"/> to an instance of <see cref="licensesDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="licenses"/> to convert.</param>
        public static licensesDto ToDTO(this licenses entity)
        {
            if (entity == null) return null;

            var dto = new licensesDto();

            dto.UID = entity.UID;
            dto.v_License = entity.v_License;
            dto.v_Descripcion = entity.v_Descripcion;
            dto.t_FechaCreacion = entity.t_FechaCreacion;
            dto.i_IdUsuarioCreacion = entity.i_IdUsuarioCreacion;
            dto.t_FechaExpiracion = entity.t_FechaExpiracion;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="licensesDto"/> to an instance of <see cref="licenses"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<licenses> ToEntities(this IEnumerable<licensesDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="licenses"/> to an instance of <see cref="licensesDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<licensesDto> ToDTOs(this IEnumerable<licenses> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
