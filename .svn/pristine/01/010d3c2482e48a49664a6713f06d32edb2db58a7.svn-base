//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/11/24 - 15:20:03
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="tipodecambio"/> and <see cref="tipodecambioDto"/>.
    /// </summary>
    public static partial class tipodecambioAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tipodecambioDto"/> converted from <see cref="tipodecambio"/>.</param>
        static partial void OnDTO(this tipodecambio entity, tipodecambioDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tipodecambio"/> converted from <see cref="tipodecambioDto"/>.</param>
        static partial void OnEntity(this tipodecambioDto dto, tipodecambio entity);

        /// <summary>
        /// Converts this instance of <see cref="tipodecambioDto"/> to an instance of <see cref="tipodecambio"/>.
        /// </summary>
        /// <param name="dto"><see cref="tipodecambioDto"/> to convert.</param>
        public static tipodecambio ToEntity(this tipodecambioDto dto)
        {
            if (dto == null) return null;

            var entity = new tipodecambio();

            entity.i_CodTipoCambio = dto.i_CodTipoCambio;
            entity.i_Periodo = dto.i_Periodo;
            entity.d_FechaTipoC = dto.d_FechaTipoC;
            entity.d_ValorCompra = dto.d_ValorCompra;
            entity.d_ValorVenta = dto.d_ValorVenta;
            entity.d_ValorCompraContable = dto.d_ValorCompraContable;
            entity.d_ValorVentaContable = dto.d_ValorVentaContable;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tipodecambio"/> to an instance of <see cref="tipodecambioDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="tipodecambio"/> to convert.</param>
        public static tipodecambioDto ToDTO(this tipodecambio entity)
        {
            if (entity == null) return null;

            var dto = new tipodecambioDto();

            dto.i_CodTipoCambio = entity.i_CodTipoCambio;
            dto.i_Periodo = entity.i_Periodo;
            dto.d_FechaTipoC = entity.d_FechaTipoC;
            dto.d_ValorCompra = entity.d_ValorCompra;
            dto.d_ValorVenta = entity.d_ValorVenta;
            dto.d_ValorCompraContable = entity.d_ValorCompraContable;
            dto.d_ValorVentaContable = entity.d_ValorVentaContable;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tipodecambioDto"/> to an instance of <see cref="tipodecambio"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tipodecambio> ToEntities(this IEnumerable<tipodecambioDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tipodecambio"/> to an instance of <see cref="tipodecambioDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tipodecambioDto> ToDTOs(this IEnumerable<tipodecambio> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
