//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.1 (entitiestodtos.codeplex.com).
//     Timestamp: 2015/11/24 - 15:06:58
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="person"/> and <see cref="personDto"/>.
    /// </summary>
    public static partial class personAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="personDto"/> converted from <see cref="person"/>.</param>
        static partial void OnDTO(this person entity, personDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="person"/> converted from <see cref="personDto"/>.</param>
        static partial void OnEntity(this personDto dto, person entity);

        /// <summary>
        /// Converts this instance of <see cref="personDto"/> to an instance of <see cref="person"/>.
        /// </summary>
        /// <param name="dto"><see cref="personDto"/> to convert.</param>
        public static person ToEntity(this personDto dto)
        {
            if (dto == null) return null;

            var entity = new person();

            entity.i_PersonId = dto.i_PersonId;
            entity.v_FirstName = dto.v_FirstName;
            entity.v_FirstLastName = dto.v_FirstLastName;
            entity.v_SecondLastName = dto.v_SecondLastName;
            entity.i_DocTypeId = dto.i_DocTypeId;
            entity.v_DocNumber = dto.v_DocNumber;
            entity.d_Birthdate = dto.d_Birthdate;
            entity.v_BirthPlace = dto.v_BirthPlace;
            entity.i_SexTypeId = dto.i_SexTypeId;
            entity.i_MaritalStatusId = dto.i_MaritalStatusId;
            entity.i_LevelOfId = dto.i_LevelOfId;
            entity.v_TelephoneNumber = dto.v_TelephoneNumber;
            entity.v_AdressLocation = dto.v_AdressLocation;
            entity.v_GeografyLocationId = dto.v_GeografyLocationId;
            entity.v_ContactName = dto.v_ContactName;
            entity.v_EmergencyPhone = dto.v_EmergencyPhone;
            entity.b_PersonImage = dto.b_PersonImage;
            entity.v_Mail = dto.v_Mail;
            entity.i_IsDeleted = dto.i_IsDeleted;
            entity.i_InsertUserId = dto.i_InsertUserId;
            entity.d_InsertDate = dto.d_InsertDate;
            entity.i_UpdateUserId = dto.i_UpdateUserId;
            entity.d_UpdateDate = dto.d_UpdateDate;
            entity.i_InsertNodeId = dto.i_InsertNodeId;
            entity.i_UpdateNodeId = dto.i_UpdateNodeId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="person"/> to an instance of <see cref="personDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="person"/> to convert.</param>
        public static personDto ToDTO(this person entity)
        {
            if (entity == null) return null;

            var dto = new personDto();

            dto.i_PersonId = entity.i_PersonId;
            dto.v_FirstName = entity.v_FirstName;
            dto.v_FirstLastName = entity.v_FirstLastName;
            dto.v_SecondLastName = entity.v_SecondLastName;
            dto.i_DocTypeId = entity.i_DocTypeId;
            dto.v_DocNumber = entity.v_DocNumber;
            dto.d_Birthdate = entity.d_Birthdate;
            dto.v_BirthPlace = entity.v_BirthPlace;
            dto.i_SexTypeId = entity.i_SexTypeId;
            dto.i_MaritalStatusId = entity.i_MaritalStatusId;
            dto.i_LevelOfId = entity.i_LevelOfId;
            dto.v_TelephoneNumber = entity.v_TelephoneNumber;
            dto.v_AdressLocation = entity.v_AdressLocation;
            dto.v_GeografyLocationId = entity.v_GeografyLocationId;
            dto.v_ContactName = entity.v_ContactName;
            dto.v_EmergencyPhone = entity.v_EmergencyPhone;
            dto.b_PersonImage = entity.b_PersonImage;
            dto.v_Mail = entity.v_Mail;
            dto.i_IsDeleted = entity.i_IsDeleted;
            dto.i_InsertUserId = entity.i_InsertUserId;
            dto.d_InsertDate = entity.d_InsertDate;
            dto.i_UpdateUserId = entity.i_UpdateUserId;
            dto.d_UpdateDate = entity.d_UpdateDate;
            dto.i_InsertNodeId = entity.i_InsertNodeId;
            dto.i_UpdateNodeId = entity.i_UpdateNodeId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="personDto"/> to an instance of <see cref="person"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<person> ToEntities(this IEnumerable<personDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="person"/> to an instance of <see cref="personDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<personDto> ToDTOs(this IEnumerable<person> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
