//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 12/10/2017 05:01:20 p.m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.applicationhierarchy), "extendedaction", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.extendedaction), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.systemuser), "extendedaction", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.extendedaction), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_Node_NodeWarehouse_i_NodeId", "node", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.node), "nodewarehouse", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.nodewarehouse), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "warehouse_nodewarehouse_v_WarehouseId", "warehouse", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.warehouse), "nodewarehouse", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.nodewarehouse), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_Role_RoleProfile_i_RoleId", "role", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.role), "roleprofile", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.roleprofile), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.applicationhierarchy), "roleprofile", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.roleprofile), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_Person_SystemUser_i_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.person), "systemuser", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.systemuser), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_Node_SystemUserNode_i_NodeId", "node", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.node), "systemusernode", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.systemusernode), true)]
[assembly: EdmRelationshipAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser", RelationshipMultiplicity.ZeroOrOne, typeof(SAMBHS.Common.DataModel.systemuser), "systemusernode", RelationshipMultiplicity.Many, typeof(SAMBHS.Common.DataModel.systemusernode), true)]

#endregion

namespace SAMBHS.Common.DataModel
{

    #region SAMBHSEntitiesModel

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SAMBHSEntitiesModel : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new SAMBHSEntitiesModel object.
        /// </summary>
        public SAMBHSEntitiesModel() : 
                base(@"name=SAMBHSConnectionString", "SAMBHSEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new SAMBHSEntitiesModel object using the connection string found in the 'SAMBHSEntitiesModel' section of the application configuration file.
        /// </summary>
        public SAMBHSEntitiesModel(string connectionString) : 
                base(connectionString, "SAMBHSEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new SAMBHSEntitiesModel object.
        /// </summary>
        public SAMBHSEntitiesModel(EntityConnection connection) : base(connection, "SAMBHSEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<applicationhierarchy> applicationhierarchy
        {
            get
            {
                if ((_applicationhierarchy == null))
                {
                    _applicationhierarchy = base.CreateObjectSet<applicationhierarchy>("applicationhierarchy");
                }
                return _applicationhierarchy;
            }
        }
        private ObjectSet<applicationhierarchy> _applicationhierarchy;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dbconfig> dbconfig
        {
            get
            {
                if ((_dbconfig == null))
                {
                    _dbconfig = base.CreateObjectSet<dbconfig>("dbconfig");
                }
                return _dbconfig;
            }
        }
        private ObjectSet<dbconfig> _dbconfig;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<extendedaction> extendedaction
        {
            get
            {
                if ((_extendedaction == null))
                {
                    _extendedaction = base.CreateObjectSet<extendedaction>("extendedaction");
                }
                return _extendedaction;
            }
        }
        private ObjectSet<extendedaction> _extendedaction;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<licenses> licenses
        {
            get
            {
                if ((_licenses == null))
                {
                    _licenses = base.CreateObjectSet<licenses>("licenses");
                }
                return _licenses;
            }
        }
        private ObjectSet<licenses> _licenses;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<node> node
        {
            get
            {
                if ((_node == null))
                {
                    _node = base.CreateObjectSet<node>("node");
                }
                return _node;
            }
        }
        private ObjectSet<node> _node;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodewarehouse> nodewarehouse
        {
            get
            {
                if ((_nodewarehouse == null))
                {
                    _nodewarehouse = base.CreateObjectSet<nodewarehouse>("nodewarehouse");
                }
                return _nodewarehouse;
            }
        }
        private ObjectSet<nodewarehouse> _nodewarehouse;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organization> organization
        {
            get
            {
                if ((_organization == null))
                {
                    _organization = base.CreateObjectSet<organization>("organization");
                }
                return _organization;
            }
        }
        private ObjectSet<organization> _organization;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person> person
        {
            get
            {
                if ((_person == null))
                {
                    _person = base.CreateObjectSet<person>("person");
                }
                return _person;
            }
        }
        private ObjectSet<person> _person;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<role> role
        {
            get
            {
                if ((_role == null))
                {
                    _role = base.CreateObjectSet<role>("role");
                }
                return _role;
            }
        }
        private ObjectSet<role> _role;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<roleprofile> roleprofile
        {
            get
            {
                if ((_roleprofile == null))
                {
                    _roleprofile = base.CreateObjectSet<roleprofile>("roleprofile");
                }
                return _roleprofile;
            }
        }
        private ObjectSet<roleprofile> _roleprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemparameter> systemparameter
        {
            get
            {
                if ((_systemparameter == null))
                {
                    _systemparameter = base.CreateObjectSet<systemparameter>("systemparameter");
                }
                return _systemparameter;
            }
        }
        private ObjectSet<systemparameter> _systemparameter;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemuser> systemuser
        {
            get
            {
                if ((_systemuser == null))
                {
                    _systemuser = base.CreateObjectSet<systemuser>("systemuser");
                }
                return _systemuser;
            }
        }
        private ObjectSet<systemuser> _systemuser;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemusernode> systemusernode
        {
            get
            {
                if ((_systemusernode == null))
                {
                    _systemusernode = base.CreateObjectSet<systemusernode>("systemusernode");
                }
                return _systemusernode;
            }
        }
        private ObjectSet<systemusernode> _systemusernode;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tipodecambio> tipodecambio
        {
            get
            {
                if ((_tipodecambio == null))
                {
                    _tipodecambio = base.CreateObjectSet<tipodecambio>("tipodecambio");
                }
                return _tipodecambio;
            }
        }
        private ObjectSet<tipodecambio> _tipodecambio;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<warehouse> warehouse
        {
            get
            {
                if ((_warehouse == null))
                {
                    _warehouse = base.CreateObjectSet<warehouse>("warehouse");
                }
                return _warehouse;
            }
        }
        private ObjectSet<warehouse> _warehouse;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the applicationhierarchy EntitySet.
        /// </summary>
        public void AddToapplicationhierarchy(applicationhierarchy applicationhierarchy)
        {
            base.AddObject("applicationhierarchy", applicationhierarchy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the dbconfig EntitySet.
        /// </summary>
        public void AddTodbconfig(dbconfig dbconfig)
        {
            base.AddObject("dbconfig", dbconfig);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the extendedaction EntitySet.
        /// </summary>
        public void AddToextendedaction(extendedaction extendedaction)
        {
            base.AddObject("extendedaction", extendedaction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the licenses EntitySet.
        /// </summary>
        public void AddTolicenses(licenses licenses)
        {
            base.AddObject("licenses", licenses);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the node EntitySet.
        /// </summary>
        public void AddTonode(node node)
        {
            base.AddObject("node", node);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodewarehouse EntitySet.
        /// </summary>
        public void AddTonodewarehouse(nodewarehouse nodewarehouse)
        {
            base.AddObject("nodewarehouse", nodewarehouse);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the organization EntitySet.
        /// </summary>
        public void AddToorganization(organization organization)
        {
            base.AddObject("organization", organization);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the person EntitySet.
        /// </summary>
        public void AddToperson(person person)
        {
            base.AddObject("person", person);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the role EntitySet.
        /// </summary>
        public void AddTorole(role role)
        {
            base.AddObject("role", role);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the roleprofile EntitySet.
        /// </summary>
        public void AddToroleprofile(roleprofile roleprofile)
        {
            base.AddObject("roleprofile", roleprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemparameter EntitySet.
        /// </summary>
        public void AddTosystemparameter(systemparameter systemparameter)
        {
            base.AddObject("systemparameter", systemparameter);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemuser EntitySet.
        /// </summary>
        public void AddTosystemuser(systemuser systemuser)
        {
            base.AddObject("systemuser", systemuser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemusernode EntitySet.
        /// </summary>
        public void AddTosystemusernode(systemusernode systemusernode)
        {
            base.AddObject("systemusernode", systemusernode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the tipodecambio EntitySet.
        /// </summary>
        public void AddTotipodecambio(tipodecambio tipodecambio)
        {
            base.AddObject("tipodecambio", tipodecambio);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the warehouse EntitySet.
        /// </summary>
        public void AddTowarehouse(warehouse warehouse)
        {
            base.AddObject("warehouse", warehouse);
        }

        #endregion
    }

    #endregion
}

namespace SAMBHS.Common.DataModel
{

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.applicationhierarchy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_ApplicationHierarchyId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="applicationhierarchy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class applicationhierarchy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new applicationhierarchy object.
        /// </summary>
        /// <param name="i_ApplicationHierarchyId">Initial value of i_ApplicationHierarchyId.</param>
        public static applicationhierarchy Createapplicationhierarchy(int i_ApplicationHierarchyId)
        {
            applicationhierarchy applicationhierarchy = new applicationhierarchy();
            applicationhierarchy.i_ApplicationHierarchyId = i_ApplicationHierarchyId;
            return applicationhierarchy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ApplicationHierarchyId
        {
            get
            {
                int value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private int _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref int value);
        partial void Oni_ApplicationHierarchyIdChanging(ref int value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// Hace referencia a a la tabla parametro
        /// 
        /// 1 Agrupacion (no usa ScopeId)
        /// 2 Funcionalidad (pantalla) (Si usa ScopeId)
        /// 3 Accion(no usa ScopeId)
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApplicationHierarchyTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApplicationHierarchyTypeId;
                OnGeti_ApplicationHierarchyTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyTypeId != value)
                {
                  Oni_ApplicationHierarchyTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyTypeId");
                  _i_ApplicationHierarchyTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyTypeId");
                  Oni_ApplicationHierarchyTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApplicationHierarchyTypeId;
        partial void OnGeti_ApplicationHierarchyTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_Level in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Level
        {
            get
            {
                global::System.Nullable<int> value = _i_Level;
                OnGeti_Level(ref value);
                return value;
            }
            set
            {
                if (_i_Level != value)
                {
                  Oni_LevelChanging(ref value);
                  ReportPropertyChanging("i_Level");
                  _i_Level = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Level");
                  Oni_LevelChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Level;
        partial void OnGeti_Level(ref global::System.Nullable<int> value);
        partial void Oni_LevelChanging(ref global::System.Nullable<int> value);
        partial void Oni_LevelChanged();
    
        /// <summary>
        /// There are no comments for v_Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Description
        {
            get
            {
                string value = _v_Description;
                OnGetv_Description(ref value);
                return value;
            }
            set
            {
                if (_v_Description != value)
                {
                  Onv_DescriptionChanging(ref value);
                  ReportPropertyChanging("v_Description");
                  _v_Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Description");
                  Onv_DescriptionChanged();
              }
            }
        }
        private string _v_Description;
        partial void OnGetv_Description(ref string value);
        partial void Onv_DescriptionChanging(ref string value);
        partial void Onv_DescriptionChanged();
    
        /// <summary>
        /// There are no comments for v_Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Form
        {
            get
            {
                string value = _v_Form;
                OnGetv_Form(ref value);
                return value;
            }
            set
            {
                if (_v_Form != value)
                {
                  Onv_FormChanging(ref value);
                  ReportPropertyChanging("v_Form");
                  _v_Form = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Form");
                  Onv_FormChanged();
              }
            }
        }
        private string _v_Form;
        partial void OnGetv_Form(ref string value);
        partial void Onv_FormChanging(ref string value);
        partial void Onv_FormChanged();
    
        /// <summary>
        /// Es el código del formulario y tambien el código de acción
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Code
        {
            get
            {
                string value = _v_Code;
                OnGetv_Code(ref value);
                return value;
            }
            set
            {
                if (_v_Code != value)
                {
                  Onv_CodeChanging(ref value);
                  ReportPropertyChanging("v_Code");
                  _v_Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Code");
                  Onv_CodeChanged();
              }
            }
        }
        private string _v_Code;
        partial void OnGetv_Code(ref string value);
        partial void Onv_CodeChanging(ref string value);
        partial void Onv_CodeChanged();
    
        /// <summary>
        /// There are no comments for i_ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ParentId
        {
            get
            {
                global::System.Nullable<int> value = _i_ParentId;
                OnGeti_ParentId(ref value);
                return value;
            }
            set
            {
                if (_i_ParentId != value)
                {
                  Oni_ParentIdChanging(ref value);
                  ReportPropertyChanging("i_ParentId");
                  _i_ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParentId");
                  Oni_ParentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ParentId;
        partial void OnGeti_ParentId(ref global::System.Nullable<int> value);
        partial void Oni_ParentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ParentIdChanged();
    
        /// <summary>
        /// Hace referencia a la tabla SystemParameter
        /// tipo opcion:  global: Son los permisos globales (Adm sistema, Adm Negocio) , contextual : Permiso por Nodo / Empresa(Adm Sistema, Adm Negocio)
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ScopeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ScopeId;
                OnGeti_ScopeId(ref value);
                return value;
            }
            set
            {
                if (_i_ScopeId != value)
                {
                  Oni_ScopeIdChanging(ref value);
                  ReportPropertyChanging("i_ScopeId");
                  _i_ScopeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ScopeId");
                  Oni_ScopeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ScopeId;
        partial void OnGeti_ScopeId(ref global::System.Nullable<int> value);
        partial void Oni_ScopeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ScopeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_TypeFormId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeFormId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeFormId;
                OnGeti_TypeFormId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeFormId != value)
                {
                  Oni_TypeFormIdChanging(ref value);
                  ReportPropertyChanging("i_TypeFormId");
                  _i_TypeFormId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeFormId");
                  Oni_TypeFormIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeFormId;
        partial void OnGeti_TypeFormId(ref global::System.Nullable<int> value);
        partial void Oni_TypeFormIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeFormIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for extendedaction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "extendedaction")]
        public EntityCollection<extendedaction> extendedaction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<extendedaction>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "extendedaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<extendedaction>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "extendedaction", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for roleprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "roleprofile")]
        public EntityCollection<roleprofile> roleprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<roleprofile>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "roleprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<roleprofile>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "roleprofile", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.dbconfig in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_ConfId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="dbconfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dbconfig : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new dbconfig object.
        /// </summary>
        /// <param name="i_ConfId">Initial value of i_ConfId.</param>
        public static dbconfig Createdbconfig(int i_ConfId)
        {
            dbconfig dbconfig = new dbconfig();
            dbconfig.i_ConfId = i_ConfId;
            return dbconfig;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ConfId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ConfId
        {
            get
            {
                int value = _i_ConfId;
                OnGeti_ConfId(ref value);
                return value;
            }
            set
            {
                if (_i_ConfId != value)
                {
                  Oni_ConfIdChanging(ref value);
                  ReportPropertyChanging("i_ConfId");
                  _i_ConfId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ConfId");
                  Oni_ConfIdChanged();
              }
            }
        }
        private int _i_ConfId;
        partial void OnGeti_ConfId(ref int value);
        partial void Oni_ConfIdChanging(ref int value);
        partial void Oni_ConfIdChanged();
    
        /// <summary>
        /// There are no comments for v_RutaMSSQL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RutaMSSQL
        {
            get
            {
                string value = _v_RutaMSSQL;
                OnGetv_RutaMSSQL(ref value);
                return value;
            }
            set
            {
                if (_v_RutaMSSQL != value)
                {
                  Onv_RutaMSSQLChanging(ref value);
                  ReportPropertyChanging("v_RutaMSSQL");
                  _v_RutaMSSQL = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RutaMSSQL");
                  Onv_RutaMSSQLChanged();
              }
            }
        }
        private string _v_RutaMSSQL;
        partial void OnGetv_RutaMSSQL(ref string value);
        partial void Onv_RutaMSSQLChanging(ref string value);
        partial void Onv_RutaMSSQLChanged();
    
        /// <summary>
        /// There are no comments for v_RutaBDPlantilla in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RutaBDPlantilla
        {
            get
            {
                string value = _v_RutaBDPlantilla;
                OnGetv_RutaBDPlantilla(ref value);
                return value;
            }
            set
            {
                if (_v_RutaBDPlantilla != value)
                {
                  Onv_RutaBDPlantillaChanging(ref value);
                  ReportPropertyChanging("v_RutaBDPlantilla");
                  _v_RutaBDPlantilla = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RutaBDPlantilla");
                  Onv_RutaBDPlantillaChanged();
              }
            }
        }
        private string _v_RutaBDPlantilla;
        partial void OnGetv_RutaBDPlantilla(ref string value);
        partial void Onv_RutaBDPlantillaChanging(ref string value);
        partial void Onv_RutaBDPlantillaChanged();

        #endregion
    }

    /// <summary>
    /// Son los permisos extendidos para un usuario en particular
    /// </summary>
    /// <KeyProperties>
    /// i_ExtendedActionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="extendedaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class extendedaction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new extendedaction object.
        /// </summary>
        /// <param name="i_ExtendedActionId">Initial value of i_ExtendedActionId.</param>
        public static extendedaction Createextendedaction(int i_ExtendedActionId)
        {
            extendedaction extendedaction = new extendedaction();
            extendedaction.i_ExtendedActionId = i_ExtendedActionId;
            return extendedaction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ExtendedActionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ExtendedActionId
        {
            get
            {
                int value = _i_ExtendedActionId;
                OnGeti_ExtendedActionId(ref value);
                return value;
            }
            set
            {
                if (_i_ExtendedActionId != value)
                {
                  Oni_ExtendedActionIdChanging(ref value);
                  ReportPropertyChanging("i_ExtendedActionId");
                  _i_ExtendedActionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ExtendedActionId");
                  Oni_ExtendedActionIdChanged();
              }
            }
        }
        private int _i_ExtendedActionId;
        partial void OnGeti_ExtendedActionId(ref int value);
        partial void Oni_ExtendedActionIdChanging(ref int value);
        partial void Oni_ExtendedActionIdChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SystemUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApplicationHierarchyId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy")]
        public applicationhierarchy applicationhierarchy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<applicationhierarchy> applicationhierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_ExtendedAction_i_ApplicationHierarchyId", "applicationhierarchy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "systemuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.licenses in the schema.
    /// </summary>
    /// <KeyProperties>
    /// UID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="licenses")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class licenses : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new licenses object.
        /// </summary>
        /// <param name="uID">Initial value of UID.</param>
        public static licenses Createlicenses(string uID)
        {
            licenses licenses = new licenses();
            licenses.UID = uID;
            return licenses;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string UID
        {
            get
            {
                string value = _UID;
                OnGetUID(ref value);
                return value;
            }
            set
            {
                if (_UID != value)
                {
                  OnUIDChanging(ref value);
                  ReportPropertyChanging("UID");
                  _UID = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UID");
                  OnUIDChanged();
              }
            }
        }
        private string _UID;
        partial void OnGetUID(ref string value);
        partial void OnUIDChanging(ref string value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// There are no comments for v_License in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_License
        {
            get
            {
                string value = _v_License;
                OnGetv_License(ref value);
                return value;
            }
            set
            {
                if (_v_License != value)
                {
                  Onv_LicenseChanging(ref value);
                  ReportPropertyChanging("v_License");
                  _v_License = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_License");
                  Onv_LicenseChanged();
              }
            }
        }
        private string _v_License;
        partial void OnGetv_License(ref string value);
        partial void Onv_LicenseChanging(ref string value);
        partial void Onv_LicenseChanged();
    
        /// <summary>
        /// There are no comments for v_Descripcion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Descripcion
        {
            get
            {
                string value = _v_Descripcion;
                OnGetv_Descripcion(ref value);
                return value;
            }
            set
            {
                if (_v_Descripcion != value)
                {
                  Onv_DescripcionChanging(ref value);
                  ReportPropertyChanging("v_Descripcion");
                  _v_Descripcion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Descripcion");
                  Onv_DescripcionChanged();
              }
            }
        }
        private string _v_Descripcion;
        partial void OnGetv_Descripcion(ref string value);
        partial void Onv_DescripcionChanging(ref string value);
        partial void Onv_DescripcionChanged();
    
        /// <summary>
        /// There are no comments for t_FechaCreacion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> t_FechaCreacion
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _t_FechaCreacion;
                OnGett_FechaCreacion(ref value);
                return value;
            }
            set
            {
                if (_t_FechaCreacion != value)
                {
                  Ont_FechaCreacionChanging(ref value);
                  ReportPropertyChanging("t_FechaCreacion");
                  _t_FechaCreacion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("t_FechaCreacion");
                  Ont_FechaCreacionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _t_FechaCreacion;
        partial void OnGett_FechaCreacion(ref global::System.Nullable<System.DateTime> value);
        partial void Ont_FechaCreacionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ont_FechaCreacionChanged();
    
        /// <summary>
        /// There are no comments for i_IdUsuarioCreacion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IdUsuarioCreacion
        {
            get
            {
                global::System.Nullable<int> value = _i_IdUsuarioCreacion;
                OnGeti_IdUsuarioCreacion(ref value);
                return value;
            }
            set
            {
                if (_i_IdUsuarioCreacion != value)
                {
                  Oni_IdUsuarioCreacionChanging(ref value);
                  ReportPropertyChanging("i_IdUsuarioCreacion");
                  _i_IdUsuarioCreacion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IdUsuarioCreacion");
                  Oni_IdUsuarioCreacionChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IdUsuarioCreacion;
        partial void OnGeti_IdUsuarioCreacion(ref global::System.Nullable<int> value);
        partial void Oni_IdUsuarioCreacionChanging(ref global::System.Nullable<int> value);
        partial void Oni_IdUsuarioCreacionChanged();
    
        /// <summary>
        /// There are no comments for t_FechaExpiracion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> t_FechaExpiracion
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _t_FechaExpiracion;
                OnGett_FechaExpiracion(ref value);
                return value;
            }
            set
            {
                if (_t_FechaExpiracion != value)
                {
                  Ont_FechaExpiracionChanging(ref value);
                  ReportPropertyChanging("t_FechaExpiracion");
                  _t_FechaExpiracion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("t_FechaExpiracion");
                  Ont_FechaExpiracionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _t_FechaExpiracion;
        partial void OnGett_FechaExpiracion(ref global::System.Nullable<System.DateTime> value);
        partial void Ont_FechaExpiracionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ont_FechaExpiracionChanged();

        #endregion
    }

    /// <summary>
    /// Son las áreas geográficas donde se ingresará los datos (Almacenes, Tienda, Central, etc)
    /// 
    /// El nodo N001 será el nodo Data Center
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="node")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class node : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new node object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static node Createnode(int i_NodeId)
        {
            node node = new node();
            node.i_NodeId = i_NodeId;
            return node;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_RazonSocial in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RazonSocial
        {
            get
            {
                string value = _v_RazonSocial;
                OnGetv_RazonSocial(ref value);
                return value;
            }
            set
            {
                if (_v_RazonSocial != value)
                {
                  Onv_RazonSocialChanging(ref value);
                  ReportPropertyChanging("v_RazonSocial");
                  _v_RazonSocial = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RazonSocial");
                  Onv_RazonSocialChanged();
              }
            }
        }
        private string _v_RazonSocial;
        partial void OnGetv_RazonSocial(ref string value);
        partial void Onv_RazonSocialChanging(ref string value);
        partial void Onv_RazonSocialChanged();
    
        /// <summary>
        /// There are no comments for v_RUC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RUC
        {
            get
            {
                string value = _v_RUC;
                OnGetv_RUC(ref value);
                return value;
            }
            set
            {
                if (_v_RUC != value)
                {
                  Onv_RUCChanging(ref value);
                  ReportPropertyChanging("v_RUC");
                  _v_RUC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RUC");
                  Onv_RUCChanged();
              }
            }
        }
        private string _v_RUC;
        partial void OnGetv_RUC(ref string value);
        partial void Onv_RUCChanging(ref string value);
        partial void Onv_RUCChanged();
    
        /// <summary>
        /// There are no comments for v_Direccion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Direccion
        {
            get
            {
                string value = _v_Direccion;
                OnGetv_Direccion(ref value);
                return value;
            }
            set
            {
                if (_v_Direccion != value)
                {
                  Onv_DireccionChanging(ref value);
                  ReportPropertyChanging("v_Direccion");
                  _v_Direccion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Direccion");
                  Onv_DireccionChanged();
              }
            }
        }
        private string _v_Direccion;
        partial void OnGetv_Direccion(ref string value);
        partial void Onv_DireccionChanging(ref string value);
        partial void Onv_DireccionChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for nodewarehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Node_NodeWarehouse_i_NodeId", "nodewarehouse")]
        public EntityCollection<nodewarehouse> nodewarehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodewarehouse>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "nodewarehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodewarehouse>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "nodewarehouse", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemusernode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Node_SystemUserNode_i_NodeId", "systemusernode")]
        public EntityCollection<systemusernode> systemusernode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemusernode>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "systemusernode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemusernode>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "systemusernode", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.nodewarehouse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeWarehouseId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="nodewarehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodewarehouse : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodewarehouse object.
        /// </summary>
        /// <param name="i_NodeWarehouseId">Initial value of i_NodeWarehouseId.</param>
        public static nodewarehouse Createnodewarehouse(int i_NodeWarehouseId)
        {
            nodewarehouse nodewarehouse = new nodewarehouse();
            nodewarehouse.i_NodeWarehouseId = i_NodeWarehouseId;
            return nodewarehouse;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeWarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeWarehouseId
        {
            get
            {
                int value = _i_NodeWarehouseId;
                OnGeti_NodeWarehouseId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeWarehouseId != value)
                {
                  Oni_NodeWarehouseIdChanging(ref value);
                  ReportPropertyChanging("i_NodeWarehouseId");
                  _i_NodeWarehouseId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeWarehouseId");
                  Oni_NodeWarehouseIdChanged();
              }
            }
        }
        private int _i_NodeWarehouseId;
        partial void OnGeti_NodeWarehouseId(ref int value);
        partial void Oni_NodeWarehouseIdChanging(ref int value);
        partial void Oni_NodeWarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeId;
        partial void OnGeti_NodeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_WarehouseId
        {
            get
            {
                global::System.Nullable<int> value = _i_WarehouseId;
                OnGeti_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_i_WarehouseId != value)
                {
                  Oni_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("i_WarehouseId");
                  _i_WarehouseId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_WarehouseId");
                  Oni_WarehouseIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_WarehouseId;
        partial void OnGeti_WarehouseId(ref global::System.Nullable<int> value);
        partial void Oni_WarehouseIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Node_NodeWarehouse_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_NodeWarehouse_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "warehouse_nodewarehouse_v_WarehouseId", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.organization in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_OrganizationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organization : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new organization object.
        /// </summary>
        /// <param name="i_OrganizationId">Initial value of i_OrganizationId.</param>
        public static organization Createorganization(int i_OrganizationId)
        {
            organization organization = new organization();
            organization.i_OrganizationId = i_OrganizationId;
            return organization;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_OrganizationId
        {
            get
            {
                int value = _i_OrganizationId;
                OnGeti_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_i_OrganizationId != value)
                {
                  Oni_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("i_OrganizationId");
                  _i_OrganizationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_OrganizationId");
                  Oni_OrganizationIdChanged();
              }
            }
        }
        private int _i_OrganizationId;
        partial void OnGeti_OrganizationId(ref int value);
        partial void Oni_OrganizationIdChanging(ref int value);
        partial void Oni_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_IdentificationNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_IdentificationNumber
        {
            get
            {
                string value = _v_IdentificationNumber;
                OnGetv_IdentificationNumber(ref value);
                return value;
            }
            set
            {
                if (_v_IdentificationNumber != value)
                {
                  Onv_IdentificationNumberChanging(ref value);
                  ReportPropertyChanging("v_IdentificationNumber");
                  _v_IdentificationNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_IdentificationNumber");
                  Onv_IdentificationNumberChanged();
              }
            }
        }
        private string _v_IdentificationNumber;
        partial void OnGetv_IdentificationNumber(ref string value);
        partial void Onv_IdentificationNumberChanging(ref string value);
        partial void Onv_IdentificationNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Address
        {
            get
            {
                string value = _v_Address;
                OnGetv_Address(ref value);
                return value;
            }
            set
            {
                if (_v_Address != value)
                {
                  Onv_AddressChanging(ref value);
                  ReportPropertyChanging("v_Address");
                  _v_Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Address");
                  Onv_AddressChanged();
              }
            }
        }
        private string _v_Address;
        partial void OnGetv_Address(ref string value);
        partial void Onv_AddressChanging(ref string value);
        partial void Onv_AddressChanged();
    
        /// <summary>
        /// There are no comments for v_PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PhoneNumber
        {
            get
            {
                string value = _v_PhoneNumber;
                OnGetv_PhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_PhoneNumber != value)
                {
                  Onv_PhoneNumberChanging(ref value);
                  ReportPropertyChanging("v_PhoneNumber");
                  _v_PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PhoneNumber");
                  Onv_PhoneNumberChanged();
              }
            }
        }
        private string _v_PhoneNumber;
        partial void OnGetv_PhoneNumber(ref string value);
        partial void Onv_PhoneNumberChanging(ref string value);
        partial void Onv_PhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for v_ContacName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ContacName
        {
            get
            {
                string value = _v_ContacName;
                OnGetv_ContacName(ref value);
                return value;
            }
            set
            {
                if (_v_ContacName != value)
                {
                  Onv_ContacNameChanging(ref value);
                  ReportPropertyChanging("v_ContacName");
                  _v_ContacName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ContacName");
                  Onv_ContacNameChanged();
              }
            }
        }
        private string _v_ContacName;
        partial void OnGetv_ContacName(ref string value);
        partial void Onv_ContacNameChanging(ref string value);
        partial void Onv_ContacNameChanged();
    
        /// <summary>
        /// There are no comments for v_Observation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Observation
        {
            get
            {
                string value = _v_Observation;
                OnGetv_Observation(ref value);
                return value;
            }
            set
            {
                if (_v_Observation != value)
                {
                  Onv_ObservationChanging(ref value);
                  ReportPropertyChanging("v_Observation");
                  _v_Observation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Observation");
                  Onv_ObservationChanged();
              }
            }
        }
        private string _v_Observation;
        partial void OnGetv_Observation(ref string value);
        partial void Onv_ObservationChanging(ref string value);
        partial void Onv_ObservationChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion
    }

    /// <summary>
    /// Person será creado solo en el Data Center, y bajará a los nodos
    /// </summary>
    /// <KeyProperties>
    /// i_PersonId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new person object.
        /// </summary>
        /// <param name="i_PersonId">Initial value of i_PersonId.</param>
        public static person Createperson(int i_PersonId)
        {
            person person = new person();
            person.i_PersonId = i_PersonId;
            return person;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_PersonId
        {
            get
            {
                int value = _i_PersonId;
                OnGeti_PersonId(ref value);
                return value;
            }
            set
            {
                if (_i_PersonId != value)
                {
                  Oni_PersonIdChanging(ref value);
                  ReportPropertyChanging("i_PersonId");
                  _i_PersonId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_PersonId");
                  Oni_PersonIdChanged();
              }
            }
        }
        private int _i_PersonId;
        partial void OnGeti_PersonId(ref int value);
        partial void Oni_PersonIdChanging(ref int value);
        partial void Oni_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstName
        {
            get
            {
                string value = _v_FirstName;
                OnGetv_FirstName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstName != value)
                {
                  Onv_FirstNameChanging(ref value);
                  ReportPropertyChanging("v_FirstName");
                  _v_FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstName");
                  Onv_FirstNameChanged();
              }
            }
        }
        private string _v_FirstName;
        partial void OnGetv_FirstName(ref string value);
        partial void Onv_FirstNameChanging(ref string value);
        partial void Onv_FirstNameChanged();
    
        /// <summary>
        /// There are no comments for v_FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstLastName
        {
            get
            {
                string value = _v_FirstLastName;
                OnGetv_FirstLastName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstLastName != value)
                {
                  Onv_FirstLastNameChanging(ref value);
                  ReportPropertyChanging("v_FirstLastName");
                  _v_FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstLastName");
                  Onv_FirstLastNameChanged();
              }
            }
        }
        private string _v_FirstLastName;
        partial void OnGetv_FirstLastName(ref string value);
        partial void Onv_FirstLastNameChanging(ref string value);
        partial void Onv_FirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecondLastName
        {
            get
            {
                string value = _v_SecondLastName;
                OnGetv_SecondLastName(ref value);
                return value;
            }
            set
            {
                if (_v_SecondLastName != value)
                {
                  Onv_SecondLastNameChanging(ref value);
                  ReportPropertyChanging("v_SecondLastName");
                  _v_SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecondLastName");
                  Onv_SecondLastNameChanged();
              }
            }
        }
        private string _v_SecondLastName;
        partial void OnGetv_SecondLastName(ref string value);
        partial void Onv_SecondLastNameChanging(ref string value);
        partial void Onv_SecondLastNameChanged();
    
        /// <summary>
        /// Dni, Ruc, Passaporte, Etc
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DocTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_DocTypeId;
                OnGeti_DocTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_DocTypeId != value)
                {
                  Oni_DocTypeIdChanging(ref value);
                  ReportPropertyChanging("i_DocTypeId");
                  _i_DocTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DocTypeId");
                  Oni_DocTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DocTypeId;
        partial void OnGeti_DocTypeId(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for d_Birthdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Birthdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Birthdate;
                OnGetd_Birthdate(ref value);
                return value;
            }
            set
            {
                if (_d_Birthdate != value)
                {
                  Ond_BirthdateChanging(ref value);
                  ReportPropertyChanging("d_Birthdate");
                  _d_Birthdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Birthdate");
                  Ond_BirthdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Birthdate;
        partial void OnGetd_Birthdate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanged();
    
        /// <summary>
        /// Lugar de Nacimiento como texto
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_BirthPlace
        {
            get
            {
                string value = _v_BirthPlace;
                OnGetv_BirthPlace(ref value);
                return value;
            }
            set
            {
                if (_v_BirthPlace != value)
                {
                  Onv_BirthPlaceChanging(ref value);
                  ReportPropertyChanging("v_BirthPlace");
                  _v_BirthPlace = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_BirthPlace");
                  Onv_BirthPlaceChanged();
              }
            }
        }
        private string _v_BirthPlace;
        partial void OnGetv_BirthPlace(ref string value);
        partial void Onv_BirthPlaceChanging(ref string value);
        partial void Onv_BirthPlaceChanged();
    
        /// <summary>
        /// Masculino, Femenino
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SexTypeId;
                OnGeti_SexTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SexTypeId != value)
                {
                  Oni_SexTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SexTypeId");
                  _i_SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SexTypeId");
                  Oni_SexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SexTypeId;
        partial void OnGeti_SexTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanged();
    
        /// <summary>
        /// Soltero; Casado; Conviviente; Divorciado; Viudo
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MaritalStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_MaritalStatusId;
                OnGeti_MaritalStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_MaritalStatusId != value)
                {
                  Oni_MaritalStatusIdChanging(ref value);
                  ReportPropertyChanging("i_MaritalStatusId");
                  _i_MaritalStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MaritalStatusId");
                  Oni_MaritalStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MaritalStatusId;
        partial void OnGeti_MaritalStatusId(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanged();
    
        /// <summary>
        /// Analfabeto; Primaria Incompleta; Primaria Completa; Secundaria Incompleta; Secundaria Completa; Técnico; Universitario; Post Grado.
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LevelOfId
        {
            get
            {
                global::System.Nullable<int> value = _i_LevelOfId;
                OnGeti_LevelOfId(ref value);
                return value;
            }
            set
            {
                if (_i_LevelOfId != value)
                {
                  Oni_LevelOfIdChanging(ref value);
                  ReportPropertyChanging("i_LevelOfId");
                  _i_LevelOfId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LevelOfId");
                  Oni_LevelOfIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LevelOfId;
        partial void OnGeti_LevelOfId(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanged();
    
        /// <summary>
        /// There are no comments for v_TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TelephoneNumber
        {
            get
            {
                string value = _v_TelephoneNumber;
                OnGetv_TelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_TelephoneNumber != value)
                {
                  Onv_TelephoneNumberChanging(ref value);
                  ReportPropertyChanging("v_TelephoneNumber");
                  _v_TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TelephoneNumber");
                  Onv_TelephoneNumberChanged();
              }
            }
        }
        private string _v_TelephoneNumber;
        partial void OnGetv_TelephoneNumber(ref string value);
        partial void Onv_TelephoneNumberChanging(ref string value);
        partial void Onv_TelephoneNumberChanged();
    
        /// <summary>
        /// Lugar de residencia actual
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdressLocation
        {
            get
            {
                string value = _v_AdressLocation;
                OnGetv_AdressLocation(ref value);
                return value;
            }
            set
            {
                if (_v_AdressLocation != value)
                {
                  Onv_AdressLocationChanging(ref value);
                  ReportPropertyChanging("v_AdressLocation");
                  _v_AdressLocation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdressLocation");
                  Onv_AdressLocationChanged();
              }
            }
        }
        private string _v_AdressLocation;
        partial void OnGetv_AdressLocation(ref string value);
        partial void Onv_AdressLocationChanging(ref string value);
        partial void Onv_AdressLocationChanged();
    
        /// <summary>
        /// còdigo de obigueo
        /// 
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GeografyLocationId
        {
            get
            {
                string value = _v_GeografyLocationId;
                OnGetv_GeografyLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_GeografyLocationId != value)
                {
                  Onv_GeografyLocationIdChanging(ref value);
                  ReportPropertyChanging("v_GeografyLocationId");
                  _v_GeografyLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GeografyLocationId");
                  Onv_GeografyLocationIdChanged();
              }
            }
        }
        private string _v_GeografyLocationId;
        partial void OnGetv_GeografyLocationId(ref string value);
        partial void Onv_GeografyLocationIdChanging(ref string value);
        partial void Onv_GeografyLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ContactName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ContactName
        {
            get
            {
                string value = _v_ContactName;
                OnGetv_ContactName(ref value);
                return value;
            }
            set
            {
                if (_v_ContactName != value)
                {
                  Onv_ContactNameChanging(ref value);
                  ReportPropertyChanging("v_ContactName");
                  _v_ContactName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ContactName");
                  Onv_ContactNameChanged();
              }
            }
        }
        private string _v_ContactName;
        partial void OnGetv_ContactName(ref string value);
        partial void Onv_ContactNameChanging(ref string value);
        partial void Onv_ContactNameChanged();
    
        /// <summary>
        /// There are no comments for v_EmergencyPhone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmergencyPhone
        {
            get
            {
                string value = _v_EmergencyPhone;
                OnGetv_EmergencyPhone(ref value);
                return value;
            }
            set
            {
                if (_v_EmergencyPhone != value)
                {
                  Onv_EmergencyPhoneChanging(ref value);
                  ReportPropertyChanging("v_EmergencyPhone");
                  _v_EmergencyPhone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmergencyPhone");
                  Onv_EmergencyPhoneChanged();
              }
            }
        }
        private string _v_EmergencyPhone;
        partial void OnGetv_EmergencyPhone(ref string value);
        partial void Onv_EmergencyPhoneChanging(ref string value);
        partial void Onv_EmergencyPhoneChanged();
    
        /// <summary>
        /// There are no comments for b_PersonImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_PersonImage
        {
            get
            {
                byte[] value = _b_PersonImage;
                OnGetb_PersonImage(ref value);
                return value;
            }
            set
            {
                if (_b_PersonImage != value)
                {
                  Onb_PersonImageChanging(ref value);
                  ReportPropertyChanging("b_PersonImage");
                  _b_PersonImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_PersonImage");
                  Onb_PersonImageChanged();
              }
            }
        }
        private byte[] _b_PersonImage;
        partial void OnGetb_PersonImage(ref byte[] value);
        partial void Onb_PersonImageChanging(ref byte[] value);
        partial void Onb_PersonImageChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_InsertNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertNodeId;
                OnGeti_InsertNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertNodeId != value)
                {
                  Oni_InsertNodeIdChanging(ref value);
                  ReportPropertyChanging("i_InsertNodeId");
                  _i_InsertNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertNodeId");
                  Oni_InsertNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertNodeId;
        partial void OnGeti_InsertNodeId(ref global::System.Nullable<int> value);
        partial void Oni_InsertNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertNodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Person_SystemUser_i_PersonId", "systemuser")]
        public EntityCollection<systemuser> systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemuser>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "systemuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemuser>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "systemuser", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.role in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_RoleId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class role : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new role object.
        /// </summary>
        /// <param name="i_RoleId">Initial value of i_RoleId.</param>
        public static role Createrole(int i_RoleId)
        {
            role role = new role();
            role.i_RoleId = i_RoleId;
            return role;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_RoleId
        {
            get
            {
                int value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private int _i_RoleId;
        partial void OnGeti_RoleId(ref int value);
        partial void Oni_RoleIdChanging(ref int value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for roleprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Role_RoleProfile_i_RoleId", "roleprofile")]
        public EntityCollection<roleprofile> roleprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<roleprofile>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "roleprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<roleprofile>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "roleprofile", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// aca se grabran las pantallas y acciones de un rol por usuario
    /// </summary>
    /// <KeyProperties>
    /// i_RoleProfileId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="roleprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class roleprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new roleprofile object.
        /// </summary>
        /// <param name="i_RoleProfileId">Initial value of i_RoleProfileId.</param>
        public static roleprofile Createroleprofile(int i_RoleProfileId)
        {
            roleprofile roleprofile = new roleprofile();
            roleprofile.i_RoleProfileId = i_RoleProfileId;
            return roleprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_RoleProfileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_RoleProfileId
        {
            get
            {
                int value = _i_RoleProfileId;
                OnGeti_RoleProfileId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleProfileId != value)
                {
                  Oni_RoleProfileIdChanging(ref value);
                  ReportPropertyChanging("i_RoleProfileId");
                  _i_RoleProfileId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleProfileId");
                  Oni_RoleProfileIdChanged();
              }
            }
        }
        private int _i_RoleProfileId;
        partial void OnGeti_RoleProfileId(ref int value);
        partial void Oni_RoleProfileIdChanging(ref int value);
        partial void Oni_RoleProfileIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApplicationHierarchyId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_RoleId
        {
            get
            {
                global::System.Nullable<int> value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_RoleId;
        partial void OnGeti_RoleId(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for role in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Role_RoleProfile_i_RoleId", "role")]
        public role role
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<role>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "role").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<role>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "role").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for role in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<role> roleReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<role>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "role");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<role>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "role", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<role>("SAMBHS.Common.DataModel.Fk_Role_RoleProfile_i_RoleId", "role").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy")]
        public applicationhierarchy applicationhierarchy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<applicationhierarchy> applicationhierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("SAMBHS.Common.DataModel.Fk_ApplicationHierarchy_RoleProfile_i_ApplicationHierarchyId", "applicationhierarchy").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.systemparameter in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_GroupId
    /// i_ParameterId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="systemparameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemparameter : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemparameter object.
        /// </summary>
        /// <param name="i_GroupId">Initial value of i_GroupId.</param>
        /// <param name="i_ParameterId">Initial value of i_ParameterId.</param>
        public static systemparameter Createsystemparameter(int i_GroupId, int i_ParameterId)
        {
            systemparameter systemparameter = new systemparameter();
            systemparameter.i_GroupId = i_GroupId;
            systemparameter.i_ParameterId = i_ParameterId;
            return systemparameter;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_GroupId
        {
            get
            {
                int value = _i_GroupId;
                OnGeti_GroupId(ref value);
                return value;
            }
            set
            {
                if (_i_GroupId != value)
                {
                  Oni_GroupIdChanging(ref value);
                  ReportPropertyChanging("i_GroupId");
                  _i_GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GroupId");
                  Oni_GroupIdChanged();
              }
            }
        }
        private int _i_GroupId;
        partial void OnGeti_GroupId(ref int value);
        partial void Oni_GroupIdChanging(ref int value);
        partial void Oni_GroupIdChanged();
    
        /// <summary>
        /// There are no comments for i_ParameterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ParameterId
        {
            get
            {
                int value = _i_ParameterId;
                OnGeti_ParameterId(ref value);
                return value;
            }
            set
            {
                if (_i_ParameterId != value)
                {
                  Oni_ParameterIdChanging(ref value);
                  ReportPropertyChanging("i_ParameterId");
                  _i_ParameterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParameterId");
                  Oni_ParameterIdChanged();
              }
            }
        }
        private int _i_ParameterId;
        partial void OnGeti_ParameterId(ref int value);
        partial void Oni_ParameterIdChanging(ref int value);
        partial void Oni_ParameterIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for v_Value2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value2
        {
            get
            {
                string value = _v_Value2;
                OnGetv_Value2(ref value);
                return value;
            }
            set
            {
                if (_v_Value2 != value)
                {
                  Onv_Value2Changing(ref value);
                  ReportPropertyChanging("v_Value2");
                  _v_Value2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value2");
                  Onv_Value2Changed();
              }
            }
        }
        private string _v_Value2;
        partial void OnGetv_Value2(ref string value);
        partial void Onv_Value2Changing(ref string value);
        partial void Onv_Value2Changed();
    
        /// <summary>
        /// There are no comments for v_Value3 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value3
        {
            get
            {
                string value = _v_Value3;
                OnGetv_Value3(ref value);
                return value;
            }
            set
            {
                if (_v_Value3 != value)
                {
                  Onv_Value3Changing(ref value);
                  ReportPropertyChanging("v_Value3");
                  _v_Value3 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value3");
                  Onv_Value3Changed();
              }
            }
        }
        private string _v_Value3;
        partial void OnGetv_Value3(ref string value);
        partial void Onv_Value3Changing(ref string value);
        partial void Onv_Value3Changed();
    
        /// <summary>
        /// There are no comments for v_Field in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Field
        {
            get
            {
                string value = _v_Field;
                OnGetv_Field(ref value);
                return value;
            }
            set
            {
                if (_v_Field != value)
                {
                  Onv_FieldChanging(ref value);
                  ReportPropertyChanging("v_Field");
                  _v_Field = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Field");
                  Onv_FieldChanged();
              }
            }
        }
        private string _v_Field;
        partial void OnGetv_Field(ref string value);
        partial void Onv_FieldChanging(ref string value);
        partial void Onv_FieldChanged();
    
        /// <summary>
        /// There are no comments for i_ParentParameterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ParentParameterId
        {
            get
            {
                global::System.Nullable<int> value = _i_ParentParameterId;
                OnGeti_ParentParameterId(ref value);
                return value;
            }
            set
            {
                if (_i_ParentParameterId != value)
                {
                  Oni_ParentParameterIdChanging(ref value);
                  ReportPropertyChanging("i_ParentParameterId");
                  _i_ParentParameterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParentParameterId");
                  Oni_ParentParameterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ParentParameterId;
        partial void OnGeti_ParentParameterId(ref global::System.Nullable<int> value);
        partial void Oni_ParentParameterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ParentParameterIdChanged();
    
        /// <summary>
        /// There are no comments for i_Sort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Sort
        {
            get
            {
                global::System.Nullable<int> value = _i_Sort;
                OnGeti_Sort(ref value);
                return value;
            }
            set
            {
                if (_i_Sort != value)
                {
                  Oni_SortChanging(ref value);
                  ReportPropertyChanging("i_Sort");
                  _i_Sort = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Sort");
                  Oni_SortChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Sort;
        partial void OnGeti_Sort(ref global::System.Nullable<int> value);
        partial void Oni_SortChanging(ref global::System.Nullable<int> value);
        partial void Oni_SortChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.systemuser in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="systemuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemuser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemuser object.
        /// </summary>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        public static systemuser Createsystemuser(int i_SystemUserId)
        {
            systemuser systemuser = new systemuser();
            systemuser.i_SystemUserId = i_SystemUserId;
            return systemuser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_PersonId
        {
            get
            {
                global::System.Nullable<int> value = _i_PersonId;
                OnGeti_PersonId(ref value);
                return value;
            }
            set
            {
                if (_i_PersonId != value)
                {
                  Oni_PersonIdChanging(ref value);
                  ReportPropertyChanging("i_PersonId");
                  _i_PersonId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_PersonId");
                  Oni_PersonIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_PersonId;
        partial void OnGeti_PersonId(ref global::System.Nullable<int> value);
        partial void Oni_PersonIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_PersonIdChanged();
    
        /// <summary>
        /// Es el Rol que el usuario va a tener; viene de un grupo de SystemParameter
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_RoleId
        {
            get
            {
                global::System.Nullable<int> value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_RoleId;
        partial void OnGeti_RoleId(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for v_UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UserName
        {
            get
            {
                string value = _v_UserName;
                OnGetv_UserName(ref value);
                return value;
            }
            set
            {
                if (_v_UserName != value)
                {
                  Onv_UserNameChanging(ref value);
                  ReportPropertyChanging("v_UserName");
                  _v_UserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UserName");
                  Onv_UserNameChanged();
              }
            }
        }
        private string _v_UserName;
        partial void OnGetv_UserName(ref string value);
        partial void Onv_UserNameChanging(ref string value);
        partial void Onv_UserNameChanged();
    
        /// <summary>
        /// There are no comments for v_Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Password
        {
            get
            {
                string value = _v_Password;
                OnGetv_Password(ref value);
                return value;
            }
            set
            {
                if (_v_Password != value)
                {
                  Onv_PasswordChanging(ref value);
                  ReportPropertyChanging("v_Password");
                  _v_Password = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Password");
                  Onv_PasswordChanged();
              }
            }
        }
        private string _v_Password;
        partial void OnGetv_Password(ref string value);
        partial void Onv_PasswordChanging(ref string value);
        partial void Onv_PasswordChanged();
    
        /// <summary>
        /// There are no comments for v_SecretQuestion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecretQuestion
        {
            get
            {
                string value = _v_SecretQuestion;
                OnGetv_SecretQuestion(ref value);
                return value;
            }
            set
            {
                if (_v_SecretQuestion != value)
                {
                  Onv_SecretQuestionChanging(ref value);
                  ReportPropertyChanging("v_SecretQuestion");
                  _v_SecretQuestion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecretQuestion");
                  Onv_SecretQuestionChanged();
              }
            }
        }
        private string _v_SecretQuestion;
        partial void OnGetv_SecretQuestion(ref string value);
        partial void Onv_SecretQuestionChanging(ref string value);
        partial void Onv_SecretQuestionChanged();
    
        /// <summary>
        /// There are no comments for v_SecretAnswer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecretAnswer
        {
            get
            {
                string value = _v_SecretAnswer;
                OnGetv_SecretAnswer(ref value);
                return value;
            }
            set
            {
                if (_v_SecretAnswer != value)
                {
                  Onv_SecretAnswerChanging(ref value);
                  ReportPropertyChanging("v_SecretAnswer");
                  _v_SecretAnswer = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecretAnswer");
                  Onv_SecretAnswerChanged();
              }
            }
        }
        private string _v_SecretAnswer;
        partial void OnGetv_SecretAnswer(ref string value);
        partial void Onv_SecretAnswerChanging(ref string value);
        partial void Onv_SecretAnswerChanged();
    
        /// <summary>
        /// Código de barras del usuario, para poder loguearse para registrar una venta
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CodeBar
        {
            get
            {
                string value = _v_CodeBar;
                OnGetv_CodeBar(ref value);
                return value;
            }
            set
            {
                if (_v_CodeBar != value)
                {
                  Onv_CodeBarChanging(ref value);
                  ReportPropertyChanging("v_CodeBar");
                  _v_CodeBar = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CodeBar");
                  Onv_CodeBarChanged();
              }
            }
        }
        private string _v_CodeBar;
        partial void OnGetv_CodeBar(ref string value);
        partial void Onv_CodeBarChanging(ref string value);
        partial void Onv_CodeBarChanged();
    
        /// <summary>
        /// There are no comments for i_UsuarioContable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UsuarioContable
        {
            get
            {
                global::System.Nullable<int> value = _i_UsuarioContable;
                OnGeti_UsuarioContable(ref value);
                return value;
            }
            set
            {
                if (_i_UsuarioContable != value)
                {
                  Oni_UsuarioContableChanging(ref value);
                  ReportPropertyChanging("i_UsuarioContable");
                  _i_UsuarioContable = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UsuarioContable");
                  Oni_UsuarioContableChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UsuarioContable;
        partial void OnGeti_UsuarioContable(ref global::System.Nullable<int> value);
        partial void Oni_UsuarioContableChanging(ref global::System.Nullable<int> value);
        partial void Oni_UsuarioContableChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for extendedaction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_ExtendedAction_i_SystemUserId", "extendedaction")]
        public EntityCollection<extendedaction> extendedaction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<extendedaction>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "extendedaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<extendedaction>("SAMBHS.Common.DataModel.Fk_SystemUser_ExtendedAction_i_SystemUserId", "extendedaction", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Person_SystemUser_i_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("SAMBHS.Common.DataModel.Fk_Person_SystemUser_i_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemusernode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemusernode")]
        public EntityCollection<systemusernode> systemusernode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemusernode>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemusernode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemusernode>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemusernode", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// En esta tabla se almacenará usuarios con  acceso a uno o mas nodos.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserNodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="systemusernode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemusernode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemusernode object.
        /// </summary>
        /// <param name="i_SystemUserNodeId">Initial value of i_SystemUserNodeId.</param>
        public static systemusernode Createsystemusernode(int i_SystemUserNodeId)
        {
            systemusernode systemusernode = new systemusernode();
            systemusernode.i_SystemUserNodeId = i_SystemUserNodeId;
            return systemusernode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserNodeId
        {
            get
            {
                int value = _i_SystemUserNodeId;
                OnGeti_SystemUserNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserNodeId != value)
                {
                  Oni_SystemUserNodeIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserNodeId");
                  _i_SystemUserNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserNodeId");
                  Oni_SystemUserNodeIdChanged();
              }
            }
        }
        private int _i_SystemUserNodeId;
        partial void OnGeti_SystemUserNodeId(ref int value);
        partial void Oni_SystemUserNodeIdChanging(ref int value);
        partial void Oni_SystemUserNodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SystemUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeId;
        partial void OnGeti_NodeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_Node_SystemUserNode_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("SAMBHS.Common.DataModel.Fk_Node_SystemUserNode_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("SAMBHS.Common.DataModel.Fk_SystemUser_SystemUserWarehouse_i_SystemUserId", "systemuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.tipodecambio in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_CodTipoCambio
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="tipodecambio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tipodecambio : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new tipodecambio object.
        /// </summary>
        /// <param name="i_CodTipoCambio">Initial value of i_CodTipoCambio.</param>
        public static tipodecambio Createtipodecambio(int i_CodTipoCambio)
        {
            tipodecambio tipodecambio = new tipodecambio();
            tipodecambio.i_CodTipoCambio = i_CodTipoCambio;
            return tipodecambio;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_CodTipoCambio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_CodTipoCambio
        {
            get
            {
                int value = _i_CodTipoCambio;
                OnGeti_CodTipoCambio(ref value);
                return value;
            }
            set
            {
                if (_i_CodTipoCambio != value)
                {
                  Oni_CodTipoCambioChanging(ref value);
                  ReportPropertyChanging("i_CodTipoCambio");
                  _i_CodTipoCambio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CodTipoCambio");
                  Oni_CodTipoCambioChanged();
              }
            }
        }
        private int _i_CodTipoCambio;
        partial void OnGeti_CodTipoCambio(ref int value);
        partial void Oni_CodTipoCambioChanging(ref int value);
        partial void Oni_CodTipoCambioChanged();
    
        /// <summary>
        /// There are no comments for i_Periodo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Periodo
        {
            get
            {
                global::System.Nullable<int> value = _i_Periodo;
                OnGeti_Periodo(ref value);
                return value;
            }
            set
            {
                if (_i_Periodo != value)
                {
                  Oni_PeriodoChanging(ref value);
                  ReportPropertyChanging("i_Periodo");
                  _i_Periodo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Periodo");
                  Oni_PeriodoChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Periodo;
        partial void OnGeti_Periodo(ref global::System.Nullable<int> value);
        partial void Oni_PeriodoChanging(ref global::System.Nullable<int> value);
        partial void Oni_PeriodoChanged();
    
        /// <summary>
        /// There are no comments for d_FechaTipoC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_FechaTipoC
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_FechaTipoC;
                OnGetd_FechaTipoC(ref value);
                return value;
            }
            set
            {
                if (_d_FechaTipoC != value)
                {
                  Ond_FechaTipoCChanging(ref value);
                  ReportPropertyChanging("d_FechaTipoC");
                  _d_FechaTipoC = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_FechaTipoC");
                  Ond_FechaTipoCChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_FechaTipoC;
        partial void OnGetd_FechaTipoC(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaTipoCChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaTipoCChanged();
    
        /// <summary>
        /// There are no comments for d_ValorCompra in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> d_ValorCompra
        {
            get
            {
                global::System.Nullable<decimal> value = _d_ValorCompra;
                OnGetd_ValorCompra(ref value);
                return value;
            }
            set
            {
                if (_d_ValorCompra != value)
                {
                  Ond_ValorCompraChanging(ref value);
                  ReportPropertyChanging("d_ValorCompra");
                  _d_ValorCompra = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ValorCompra");
                  Ond_ValorCompraChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _d_ValorCompra;
        partial void OnGetd_ValorCompra(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorCompraChanging(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorCompraChanged();
    
        /// <summary>
        /// There are no comments for d_ValorVenta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> d_ValorVenta
        {
            get
            {
                global::System.Nullable<decimal> value = _d_ValorVenta;
                OnGetd_ValorVenta(ref value);
                return value;
            }
            set
            {
                if (_d_ValorVenta != value)
                {
                  Ond_ValorVentaChanging(ref value);
                  ReportPropertyChanging("d_ValorVenta");
                  _d_ValorVenta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ValorVenta");
                  Ond_ValorVentaChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _d_ValorVenta;
        partial void OnGetd_ValorVenta(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorVentaChanging(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorVentaChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for d_ValorCompraContable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> d_ValorCompraContable
        {
            get
            {
                global::System.Nullable<decimal> value = _d_ValorCompraContable;
                OnGetd_ValorCompraContable(ref value);
                return value;
            }
            set
            {
                if (_d_ValorCompraContable != value)
                {
                  Ond_ValorCompraContableChanging(ref value);
                  ReportPropertyChanging("d_ValorCompraContable");
                  _d_ValorCompraContable = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ValorCompraContable");
                  Ond_ValorCompraContableChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _d_ValorCompraContable;
        partial void OnGetd_ValorCompraContable(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorCompraContableChanging(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorCompraContableChanged();
    
        /// <summary>
        /// There are no comments for d_ValorVentaContable in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> d_ValorVentaContable
        {
            get
            {
                global::System.Nullable<decimal> value = _d_ValorVentaContable;
                OnGetd_ValorVentaContable(ref value);
                return value;
            }
            set
            {
                if (_d_ValorVentaContable != value)
                {
                  Ond_ValorVentaContableChanging(ref value);
                  ReportPropertyChanging("d_ValorVentaContable");
                  _d_ValorVentaContable = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ValorVentaContable");
                  Ond_ValorVentaContableChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _d_ValorVentaContable;
        partial void OnGetd_ValorVentaContable(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorVentaContableChanging(ref global::System.Nullable<decimal> value);
        partial void Ond_ValorVentaContableChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for SAMBHS.Common.DataModel.warehouse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_WarehouseId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="SAMBHS.Common.DataModel", Name="warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class warehouse : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new warehouse object.
        /// </summary>
        /// <param name="i_WarehouseId">Initial value of i_WarehouseId.</param>
        public static warehouse Createwarehouse(int i_WarehouseId)
        {
            warehouse warehouse = new warehouse();
            warehouse.i_WarehouseId = i_WarehouseId;
            return warehouse;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_WarehouseId
        {
            get
            {
                int value = _i_WarehouseId;
                OnGeti_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_i_WarehouseId != value)
                {
                  Oni_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("i_WarehouseId");
                  _i_WarehouseId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_WarehouseId");
                  Oni_WarehouseIdChanged();
              }
            }
        }
        private int _i_WarehouseId;
        partial void OnGeti_WarehouseId(ref int value);
        partial void Oni_WarehouseIdChanging(ref int value);
        partial void Oni_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Address
        {
            get
            {
                string value = _v_Address;
                OnGetv_Address(ref value);
                return value;
            }
            set
            {
                if (_v_Address != value)
                {
                  Onv_AddressChanging(ref value);
                  ReportPropertyChanging("v_Address");
                  _v_Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Address");
                  Onv_AddressChanged();
              }
            }
        }
        private string _v_Address;
        partial void OnGetv_Address(ref string value);
        partial void Onv_AddressChanging(ref string value);
        partial void Onv_AddressChanged();
    
        /// <summary>
        /// There are no comments for v_PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PhoneNumber
        {
            get
            {
                string value = _v_PhoneNumber;
                OnGetv_PhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_PhoneNumber != value)
                {
                  Onv_PhoneNumberChanging(ref value);
                  ReportPropertyChanging("v_PhoneNumber");
                  _v_PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PhoneNumber");
                  Onv_PhoneNumberChanged();
              }
            }
        }
        private string _v_PhoneNumber;
        partial void OnGetv_PhoneNumber(ref string value);
        partial void Onv_PhoneNumberChanging(ref string value);
        partial void Onv_PhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for v_CommercialName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CommercialName
        {
            get
            {
                string value = _v_CommercialName;
                OnGetv_CommercialName(ref value);
                return value;
            }
            set
            {
                if (_v_CommercialName != value)
                {
                  Onv_CommercialNameChanging(ref value);
                  ReportPropertyChanging("v_CommercialName");
                  _v_CommercialName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CommercialName");
                  Onv_CommercialNameChanged();
              }
            }
        }
        private string _v_CommercialName;
        partial void OnGetv_CommercialName(ref string value);
        partial void Onv_CommercialNameChanging(ref string value);
        partial void Onv_CommercialNameChanged();
    
        /// <summary>
        /// There are no comments for v_TicketSerialNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TicketSerialNumber
        {
            get
            {
                string value = _v_TicketSerialNumber;
                OnGetv_TicketSerialNumber(ref value);
                return value;
            }
            set
            {
                if (_v_TicketSerialNumber != value)
                {
                  Onv_TicketSerialNumberChanging(ref value);
                  ReportPropertyChanging("v_TicketSerialNumber");
                  _v_TicketSerialNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TicketSerialNumber");
                  Onv_TicketSerialNumberChanged();
              }
            }
        }
        private string _v_TicketSerialNumber;
        partial void OnGetv_TicketSerialNumber(ref string value);
        partial void Onv_TicketSerialNumberChanging(ref string value);
        partial void Onv_TicketSerialNumberChanged();
    
        /// <summary>
        /// There are no comments for v_EstablishmentCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EstablishmentCode
        {
            get
            {
                string value = _v_EstablishmentCode;
                OnGetv_EstablishmentCode(ref value);
                return value;
            }
            set
            {
                if (_v_EstablishmentCode != value)
                {
                  Onv_EstablishmentCodeChanging(ref value);
                  ReportPropertyChanging("v_EstablishmentCode");
                  _v_EstablishmentCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EstablishmentCode");
                  Onv_EstablishmentCodeChanged();
              }
            }
        }
        private string _v_EstablishmentCode;
        partial void OnGetv_EstablishmentCode(ref string value);
        partial void Onv_EstablishmentCodeChanging(ref string value);
        partial void Onv_EstablishmentCodeChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for nodewarehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SAMBHS.Common.DataModel", "warehouse_nodewarehouse_v_WarehouseId", "nodewarehouse")]
        public EntityCollection<nodewarehouse> nodewarehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodewarehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "nodewarehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodewarehouse>("SAMBHS.Common.DataModel.warehouse_nodewarehouse_v_WarehouseId", "nodewarehouse", value);
                }
            }
        }

        #endregion
    }

}
