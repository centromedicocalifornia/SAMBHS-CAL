//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/09/11 - 13:46:03
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="planillaturnos"/> and <see cref="planillaturnosDto"/>.
    /// </summary>
    public static partial class planillaturnosAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="planillaturnosDto"/> converted from <see cref="planillaturnos"/>.</param>
        static partial void OnDTO(this planillaturnos entity, planillaturnosDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="planillaturnos"/> converted from <see cref="planillaturnosDto"/>.</param>
        static partial void OnEntity(this planillaturnosDto dto, planillaturnos entity);

        /// <summary>
        /// Converts this instance of <see cref="planillaturnosDto"/> to an instance of <see cref="planillaturnos"/>.
        /// </summary>
        /// <param name="dto"><see cref="planillaturnosDto"/> to convert.</param>
        public static planillaturnos ToEntity(this planillaturnosDto dto)
        {
            if (dto == null) return null;

            var entity = new planillaturnos();

            entity.i_IdTurno = dto.i_IdTurno;
            entity.v_Descripcion = dto.v_Descripcion;
            entity.i_IdSemana = dto.i_IdSemana;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="planillaturnos"/> to an instance of <see cref="planillaturnosDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="planillaturnos"/> to convert.</param>
        public static planillaturnosDto ToDTO(this planillaturnos entity)
        {
            if (entity == null) return null;

            var dto = new planillaturnosDto();

            dto.i_IdTurno = entity.i_IdTurno;
            dto.v_Descripcion = entity.v_Descripcion;
            dto.i_IdSemana = entity.i_IdSemana;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="planillaturnosDto"/> to an instance of <see cref="planillaturnos"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<planillaturnos> ToEntities(this IEnumerable<planillaturnosDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="planillaturnos"/> to an instance of <see cref="planillaturnosDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<planillaturnosDto> ToDTOs(this IEnumerable<planillaturnos> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
