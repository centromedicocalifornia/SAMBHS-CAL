//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/07/13 - 15:13:22
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="flujoefectivo"/> and <see cref="flujoefectivoDto"/>.
    /// </summary>
    public static partial class flujoefectivoAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="flujoefectivoDto"/> converted from <see cref="flujoefectivo"/>.</param>
        static partial void OnDTO(this flujoefectivo entity, flujoefectivoDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="flujoefectivo"/> converted from <see cref="flujoefectivoDto"/>.</param>
        static partial void OnEntity(this flujoefectivoDto dto, flujoefectivo entity);

        /// <summary>
        /// Converts this instance of <see cref="flujoefectivoDto"/> to an instance of <see cref="flujoefectivo"/>.
        /// </summary>
        /// <param name="dto"><see cref="flujoefectivoDto"/> to convert.</param>
        public static flujoefectivo ToEntity(this flujoefectivoDto dto)
        {
            if (dto == null) return null;

            var entity = new flujoefectivo();

            entity.i_IdFlujoEfectivo = dto.i_IdFlujoEfectivo;
            entity.v_CtaMayor = dto.v_CtaMayor;
            entity.v_DescripcionCuenta = dto.v_DescripcionCuenta;
            entity.d_BalancePeriodoActual = dto.d_BalancePeriodoActual;
            entity.d_BalancePeriodoAnterior = dto.d_BalancePeriodoAnterior;
            entity.d_Aumento = dto.d_Aumento;
            entity.d_Disminucion = dto.d_Disminucion;
            entity.d_AjusteDebe = dto.d_AjusteDebe;
            entity.d_AjusteHaber = dto.d_AjusteHaber;
            entity.d_Operacion = dto.d_Operacion;
            entity.d_Inversion = dto.d_Inversion;
            entity.d_Financiamiento = dto.d_Financiamiento;
            entity.d_MetodoDirecto = dto.d_MetodoDirecto;
            entity.i_NaturalezaCuenta = dto.i_NaturalezaCuenta;
            entity.i_IdFlujoEfectivoCabecera = dto.i_IdFlujoEfectivoCabecera;
            entity.i_NroAsientoD = dto.i_NroAsientoD;
            entity.i_NroAsientoH = dto.i_NroAsientoH;
            entity.d_Aplicacion = dto.d_Aplicacion;
            entity.d_Origen = dto.d_Origen;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="flujoefectivo"/> to an instance of <see cref="flujoefectivoDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="flujoefectivo"/> to convert.</param>
        public static flujoefectivoDto ToDTO(this flujoefectivo entity)
        {
            if (entity == null) return null;

            var dto = new flujoefectivoDto();

            dto.i_IdFlujoEfectivo = entity.i_IdFlujoEfectivo;
            dto.v_CtaMayor = entity.v_CtaMayor;
            dto.v_DescripcionCuenta = entity.v_DescripcionCuenta;
            dto.d_BalancePeriodoActual = entity.d_BalancePeriodoActual;
            dto.d_BalancePeriodoAnterior = entity.d_BalancePeriodoAnterior;
            dto.d_Aumento = entity.d_Aumento;
            dto.d_Disminucion = entity.d_Disminucion;
            dto.d_AjusteDebe = entity.d_AjusteDebe;
            dto.d_AjusteHaber = entity.d_AjusteHaber;
            dto.d_Operacion = entity.d_Operacion;
            dto.d_Inversion = entity.d_Inversion;
            dto.d_Financiamiento = entity.d_Financiamiento;
            dto.d_MetodoDirecto = entity.d_MetodoDirecto;
            dto.i_NaturalezaCuenta = entity.i_NaturalezaCuenta;
            dto.i_IdFlujoEfectivoCabecera = entity.i_IdFlujoEfectivoCabecera;
            dto.i_NroAsientoD = entity.i_NroAsientoD;
            dto.i_NroAsientoH = entity.i_NroAsientoH;
            dto.d_Aplicacion = entity.d_Aplicacion;
            dto.d_Origen = entity.d_Origen;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="flujoefectivoDto"/> to an instance of <see cref="flujoefectivo"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<flujoefectivo> ToEntities(this IEnumerable<flujoefectivoDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="flujoefectivo"/> to an instance of <see cref="flujoefectivoDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<flujoefectivoDto> ToDTOs(this IEnumerable<flujoefectivo> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
