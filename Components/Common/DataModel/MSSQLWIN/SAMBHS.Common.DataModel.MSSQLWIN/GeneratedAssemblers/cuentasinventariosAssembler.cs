//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2017/07/13 - 15:12:29
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using SAMBHS.Common.DataModel;

namespace SAMBHS.Common.BE
{

    /// <summary>
    /// Assembler for <see cref="cuentasinventarios"/> and <see cref="cuentasinventariosDto"/>.
    /// </summary>
    public static partial class cuentasinventariosAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="cuentasinventariosDto"/> converted from <see cref="cuentasinventarios"/>.</param>
        static partial void OnDTO(this cuentasinventarios entity, cuentasinventariosDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="cuentasinventarios"/> converted from <see cref="cuentasinventariosDto"/>.</param>
        static partial void OnEntity(this cuentasinventariosDto dto, cuentasinventarios entity);

        /// <summary>
        /// Converts this instance of <see cref="cuentasinventariosDto"/> to an instance of <see cref="cuentasinventarios"/>.
        /// </summary>
        /// <param name="dto"><see cref="cuentasinventariosDto"/> to convert.</param>
        public static cuentasinventarios ToEntity(this cuentasinventariosDto dto)
        {
            if (dto == null) return null;

            var entity = new cuentasinventarios();

            entity.v_IdCuentaInventario = dto.v_IdCuentaInventario;
            entity.i_IdTipoActivo = dto.i_IdTipoActivo;
            entity.v_Cuenta33 = dto.v_Cuenta33;
            entity.v_Cuenta39 = dto.v_Cuenta39;
            entity.v_CuentaGasto = dto.v_CuentaGasto;
            entity.i_Eliminado = dto.i_Eliminado;
            entity.i_InsertaIdUsuario = dto.i_InsertaIdUsuario;
            entity.t_InsertaFecha = dto.t_InsertaFecha;
            entity.i_ActualizaIdUsuario = dto.i_ActualizaIdUsuario;
            entity.t_ActualizaFecha = dto.t_ActualizaFecha;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="cuentasinventarios"/> to an instance of <see cref="cuentasinventariosDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="cuentasinventarios"/> to convert.</param>
        public static cuentasinventariosDto ToDTO(this cuentasinventarios entity)
        {
            if (entity == null) return null;

            var dto = new cuentasinventariosDto();

            dto.v_IdCuentaInventario = entity.v_IdCuentaInventario;
            dto.i_IdTipoActivo = entity.i_IdTipoActivo;
            dto.v_Cuenta33 = entity.v_Cuenta33;
            dto.v_Cuenta39 = entity.v_Cuenta39;
            dto.v_CuentaGasto = entity.v_CuentaGasto;
            dto.i_Eliminado = entity.i_Eliminado;
            dto.i_InsertaIdUsuario = entity.i_InsertaIdUsuario;
            dto.t_InsertaFecha = entity.t_InsertaFecha;
            dto.i_ActualizaIdUsuario = entity.i_ActualizaIdUsuario;
            dto.t_ActualizaFecha = entity.t_ActualizaFecha;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="cuentasinventariosDto"/> to an instance of <see cref="cuentasinventarios"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<cuentasinventarios> ToEntities(this IEnumerable<cuentasinventariosDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="cuentasinventarios"/> to an instance of <see cref="cuentasinventariosDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<cuentasinventariosDto> ToDTOs(this IEnumerable<cuentasinventarios> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
